syntax = "proto3";

package ipfsv2;

enum ActionType {
  ACTION_TYPE_UNKNOWN = 0;
  ADD_EDIT = 1;
  IMPORT_SPACE = 2;
  // @TODO impl enables us to map an entity with it. What happens
  // if there's more than one CREATE_SPACE for the same address? ignore?
  // Should this be an Op instead of an action?
  CREATE_SPACE = 3;
  ARCHIVE_SPACE = 4;
}

message Edit {
  // ------------------
  // version and type are defined on every IPFS action
  // ------------------
  string version = 1;
  ActionType type = 2; // Should always be 1

  string id = 3;
  string name = 4;
  repeated Op ops = 5;
  repeated string authors = 6;
  // @TODO anything else we should put on the edit: size? source app?
}

enum OpType {
  OP_TYPE_UNKNOWN = 0;
  // CREATE_TYPE?
  // CREATE_PROPERTY?
  SET_TRIPLE = 1;       // UPDATE_ENTITY?
  DELETE_TRIPLE = 2;    // UPDATE_ENTITY? Set Value to Null?
                        //   Using Null means we store all triples ever even if they're deleted
                        //   How does hypergraph do this? I guess they don't have optional fields?
  SET_TRIPLE_BATCH = 3; // ???
  // CREATE_ENTITY?     // What's included in CREATE_ENTITY? Just the id?
  DELETE_ENTITY = 4;
  CREATE_RELATION = 5;
  DELETE_RELATION = 6;
  // @TODO: Spec for importing a IMPORT_FILE
  // Format : Compression mechanism
  IMPORT_FILE = 7;

  // @TODO Semantic move OP?
  // Main issue is that with sharding the indexer may not have
  // the from space to copy from
}

// @TODO: Use oneof instead of these weird optional state machines
message Op {
  OpType type = 1;

  /**
   * Used when setting a single triple
   */
  optional Triple triple = 2;

  /**
   * Used when setting batch ops or deleting an entity
   */
  optional Entity entity = 3;

  /**
   * Used when creating or deleting a relation
   */
  optional Relation relation = 4;

  /**
   * Used when setting batch ops
   */
  repeated Triple triples = 5;

  /**
   * Used when importing a csv file
   */
  optional string url = 6;
  optional ImportCsvMetadata metadata = 7;
}
