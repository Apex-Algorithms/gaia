// @generated
// This file is @generated by prost-build.
/// Actions message representing processed action events
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Actions {
    #[prost(message, repeated, tag="1")]
    pub actions: ::prost::alloc::vec::Vec<Action>,
}
/// Individual action message with all required fields
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Action {
    #[prost(uint64, tag="1")]
    pub action_type: u64,
    #[prost(uint64, tag="2")]
    pub action_version: u64,
    /// UserAddress (hex-encoded address)
    #[prost(string, tag="3")]
    pub sender: ::prost::alloc::string::String,
    /// ObjectId (UUID string)
    #[prost(string, tag="4")]
    pub object_id: ::prost::alloc::string::String,
    /// Optional GroupId (UUID string)
    #[prost(string, optional, tag="5")]
    pub group_id: ::core::option::Option<::prost::alloc::string::String>,
    /// SpacePOV (UUID string)
    #[prost(string, tag="6")]
    pub space_pov: ::prost::alloc::string::String,
    /// Optional metadata bytes
    #[prost(bytes="vec", optional, tag="7")]
    pub metadata: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
    /// BlockNumber
    #[prost(uint64, tag="8")]
    pub block_number: u64,
    /// BlockTimestamp
    #[prost(uint64, tag="9")]
    pub block_timestamp: u64,
    /// TxHash (hex-encoded hash)
    #[prost(string, tag="10")]
    pub tx_hash: ::prost::alloc::string::String,
    /// Object type identifier
    #[prost(uint64, tag="11")]
    pub object_type: u64,
}
// @@protoc_insertion_point(module)
